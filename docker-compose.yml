services:
  # Servicio Backend - FastAPI con hot-reloading
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: agente-backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend/app:/app
      # Montar la llave de servicio de Google Cloud (solo lectura)
      - ./config/primeval-falcon-474622-h1-d5121477addc.json:/app/config/gcloud-key.json:ro
    environment:
      - DATABASE_URL=postgresql+asyncpg://admin:supersecret123@postgres-db:5432/agentedb
      # Variables para Vertex AI con ADC
      - GOOGLE_GENAI_USE_VERTEXAI=True
      - GOOGLE_APPLICATION_CREDENTIALS=/app/config/gcloud-key.json
      - GOOGLE_CLOUD_PROJECT=${GOOGLE_CLOUD_PROJECT}
      - GOOGLE_CLOUD_LOCATION=${GOOGLE_CLOUD_LOCATION}
      # Mantener la API Key como fallback si es necesario
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
      postgres-db:
        condition: service_healthy
    networks:
      - agente-net
    restart: unless-stopped

  # Servicio PostgreSQL - Base de datos con healthcheck
  postgres-db:
    image: postgres:15-alpine
    container_name: agente-postgres
    ports:
      - "5432:5432"
    volumes:
      - ./postgres-data:/var/lib/postgresql/data/pgdata
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=supersecret123
      - POSTGRES_DB=agentedb
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d agentedb"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - agente-net
    restart: unless-stopped

  # Servicio n8n - Automatización y workflows
  n8n-mcp:
    image: n8nio/n8n:latest
    container_name: agente-n8n
    user: "1000:1000"
    ports:
      - "5678:5678"
    volumes:
      - ./n8n-data:/home/node/.n8n
    environment:
      - TZ=America/Bogota
    networks:
      - agente-net
    restart: unless-stopped

# Red principal para comunicación entre servicios
networks:
  agente-net:
    driver: bridge
    name: agente-net
